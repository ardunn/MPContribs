AWSTemplateFormatVersion: '2010-09-09'
Description: kong service
Parameters:
  PipelineName:
    Type: String
  EnvironmentName:
    Type: String
    Description: A name for the environment that this cloudformation will be part of.
                 Used to locate other resources in the same environment.
  ServiceName:
    Type: String
    Default: kong-gateway
    Description: A name for the service
  ImageUrlKong:
    Type: String
  ImageUrlKonga:
    Type: String
  DBPassword:
    Type: String
    Description: password for the Postgres DB
    NoEcho: 'true'
    MinLength: '8'
  CertificateArn:
    Type: String
    Description: ARN of the Amazon Certificate Manager SSL certificate to use for this app
  KongaAdminUsername:
    Type: String
  KongaAdminEmail:
    Type: String
  KongaAdminFirstname:
    Type: String
  KongaAdminLastname:
    Type: String
  KongaAdminPassword:
    Type: String

Resources:
  # A log group for storing the container logs for this service
  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Join ['-', [!Ref 'PipelineName', !Ref 'EnvironmentName', 'service', !Ref 'ServiceName']]

  # The task definition. This is a simple metadata description of what
  # container to run, and what resource requirements it has.
  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Ref 'ServiceName'
      Cpu: 1024
      Memory: 2048
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn:
        Fn::ImportValue:
          !Join [':', [!Ref 'PipelineName', !Ref 'EnvironmentName', 'ECSTaskExecutionRole']]
      ContainerDefinitions:
        - Name: kong
          MemoryReservation: 250
          Image: !Ref 'ImageUrlKong'
          Ulimits:
              - Name: "nofile"
                HardLimit: 4096
                SoftLimit: 4096
          Environment:
            - Name: KONG_ADMIN_LISTEN
              Value: '0.0.0.0:8001'
            - Name: KONG_DATABASE
              Value: postgres
            - Name: KONG_PG_USER
              Value: kong
            - Name: KONG_PG_DATABASE
              Value: kong
            - Name: KONG_PLUGINS
              Value: oidc,oidc-consumer,key-auth,cors,request-size-limiting,bot-detection,rate-limiting,acl,response-ratelimiting,loggly
            - Name: KONG_PG_HOST
              Value:
                Fn::ImportValue:
                    !Join [':', [!Ref 'PipelineName', !Ref 'EnvironmentName', 'DBAddress']]
            - Name: KONG_PG_PORT
              Value: 5432
            - Name: KONG_PG_PASSWORD
              Value: !Ref 'DBPassword'
            - Name: KONG_LOG_LEVEL
              Value: notice
            - Name: KONG_LUA_PACKAGE_PATH
              Value: '/usr/local/oidc/?.lua;;'
            - Name: KONG_ADMIN_ACCESS_LOG
              Value: '/dev/stdout'
            - Name: KONG_ADMIN_ERROR_LOG
              Value: '/dev/stderr'
            - Name: KONG_PROXY_ACCESS_LOG
              Value: '/dev/stdout'
            - Name: KONG_PROXY_ERROR_LOG
              Value: '/dev/stderr'
            - Name: KONG_NGINX_PROXY_PROXY_IGNORE_CLIENT_ABORT
              Value: 'on'
          PortMappings:
            - ContainerPort: 8000
            - ContainerPort: 8001
          LogConfiguration:
            LogDriver: 'awslogs'
            Options:
              awslogs-group: !Join ['-', [!Ref 'PipelineName', !Ref 'EnvironmentName', 'service', !Ref 'ServiceName']]
              awslogs-region: !Ref 'AWS::Region'
              awslogs-stream-prefix: !Ref 'ServiceName'
        - Name: dashboard
          MemoryReservation: 250
          Image: !Ref 'ImageUrlKonga'
          DependsOn:
            - Condition: START
              ContainerName: kong
          Environment:
            - Name: KONG_URL
              Value: 'http://localhost:8001'
            - Name: KONGA_ADMIN_USERNAME
              Value: !Ref 'KongaAdminUsername'
            - Name: KONGA_ADMIN_EMAIL
              Value: !Ref 'KongaAdminEmail'
            - Name: KONGA_ADMIN_FIRSTNAME
              Value: !Ref 'KongaAdminFirstname'
            - Name: KONGA_ADMIN_LASTNAME
              Value: !Ref 'KongaAdminLastname'
            - Name: KONGA_ADMIN_PASSWORD
              Value: !Ref 'KongaAdminPassword'
            - Name: KONGA_SEED_KONG_NODE_DATA_SOURCE_FILE
              Value: /app/kong_node.data
            - Name: KONGA_SEED_USER_DATA_SOURCE_FILE
              Value: /app/userdb.data
          PortMappings:
            - ContainerPort: 1337
          LogConfiguration:
            LogDriver: 'awslogs'
            Options:
              awslogs-group: !Join ['-', [!Ref 'PipelineName', !Ref 'EnvironmentName', 'service', !Ref 'ServiceName']]
              awslogs-region: !Ref 'AWS::Region'
              awslogs-stream-prefix: !Ref 'ServiceName'

  # The service. The service is a resource which allows you to run multiple
  # copies of a type of task, and gather up their logs and metrics, as well
  # as monitor the number of running tasks and replace any that have crashed
  Service:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: !Ref 'ServiceName'
      Cluster:
        Fn::ImportValue:
          !Join [':', [!Ref 'PipelineName', !Ref 'EnvironmentName', 'ClusterName']]
      LaunchType: FARGATE
      PlatformVersion: 1.4.0
      DeploymentConfiguration:
        MaximumPercent: 200
      DesiredCount: 1
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - Fn::ImportValue:
                !Join [':', [!Ref 'PipelineName', !Ref 'EnvironmentName', 'PublicSecurityGroup']]
          Subnets:
            - Fn::ImportValue:
                !Join [':', [!Ref 'PipelineName', !Ref 'EnvironmentName', 'PublicSubnetOne']]
            - Fn::ImportValue:
                !Join [':', [!Ref 'PipelineName', !Ref 'EnvironmentName', 'PublicSubnetTwo']]
      TaskDefinition: !Ref 'TaskDefinition'
      LoadBalancers:
        - ContainerName: kong
          ContainerPort: 8000
          TargetGroupArn:
            Fn::ImportValue:
              !Join [':', [!Ref 'PipelineName', !Ref 'EnvironmentName', 'NetworkLoadBalancerTargetGroup']]
