  GatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref 'VPC'
      InternetGatewayId: !Ref 'InternetGateway'

  VirtualGateway:
    Type: 'AWS::EC2::VPNGateway'
    Properties:
      Type: ipsec.1
  VirtualGatewayAttachment:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref 'VPC'
      VpnGatewayId: !Ref 'VirtualGateway'
  VpnGatewayRoutePropagation:
    Type: AWS::EC2::VPNGatewayRoutePropagation
    DependsOn:
      - 'VirtualGatewayAttachment'
    Properties:
      RouteTableIds:
        - !Ref PrivateRouteTable
      VpnGatewayId: !Ref 'VirtualGateway'
  #CustomerGateway:
  #  Type: 'AWS::EC2::CustomerGateway'
  #  Properties:
  #    Type: ipsec.1
  #    IpAddress: !Ref HomeIP
  #    BgpAsn: '65011'
  #VpnConnection:
  #  Type: 'AWS::EC2::VPNConnection'
  #  Properties:
  #    Type: ipsec.1
  #    VpnGatewayId: !Ref 'VirtualGateway'
  #    CustomerGatewayId: !Ref 'CustomerGateway'
  #VpnConnectionRoute:
  #  Type: 'AWS::EC2::VPNConnectionRoute'
  #  Properties:
  #    VpnConnectionId: !Ref 'VpnConnection'
  #    DestinationCidrBlock: 192.168.2.0/24

  #DatadogEndpoint:
  #  Type: AWS::EC2::VPCEndpoint
  #  Properties:
  #    VpcId: !Ref 'VPC'
  #    ServiceName: com.amazonaws.vpce.us-east-1.vpce-svc-056576c12b36056ca
  #    VpcEndpointType: Interface
  #    PrivateDnsEnabled: true
  #    SubnetIds:
  #      - !Ref 'PublicSubnetOne'
  #      - !Ref 'PublicSubnetTwo'
  #      - !Ref 'PrivateSubnetOne'
  #      - !Ref 'PrivateSubnetTwo'
  #    SecurityGroupIds:
  #      - !Ref 'PublicSecurityGroup'
  #      - !Ref 'PrivateSecurityGroup'

  # This is a role which is used by the ECS tasks themselves.
  ECSTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: [ecs-tasks.amazonaws.com]
          Action: ['sts:AssumeRole']
      Path: /
      Policies:
        - PolicyName: AmazonECSTaskExecutionRolePolicy
          PolicyDocument:
            Statement:
            - Effect: Allow
              Action:
                # Allow the ECS Tasks to download images from ECR
                - 'ecr:GetAuthorizationToken'
                - 'ecr:BatchCheckLayerAvailability'
                - 'ecr:GetDownloadUrlForLayer'
                - 'ecr:BatchGetImage'
                # Allow the ECS tasks to upload logs to CloudWatch
                - 'logs:CreateLogStream'
                - 'logs:PutLogEvents'
                # Allow the ECS tasks to start tasks (JHub)
                - "ecs:RunTask"
                - "ecs:StopTask"
                - "ecs:DescribeTasks"
                - "iam:PassRole"
              Resource: '*'
